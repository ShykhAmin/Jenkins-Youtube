pipeline {
    agent any

    environment {
        DEPLOY_TEST_SERVER = '192.169.0.108' // Only IP address or hostname
        DEPLOY_PROD_SERVER = '192.169.0.108' // Only IP address or hostname
        BUILD_DIR = 'target'
        ARTIFACT_NAME = 'app.war'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/springhow/spring-boot-war-example.git'
            }
        }

        stage('Test') {
            steps {
                sh 'echo "Running tests..."'
                sh 'mvn test'
            }
            post {
                success {
                    echo 'Tests passed!'
                }
                failure {
                    echo 'Tests failed!'
                    error 'Pipeline failed due to test failures'
                }
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building application..."'
                sh 'mvn clean package'
                sh "cp ${BUILD_DIR}/*.war ${ARTIFACT_NAME}"
            }
            post {
                success {
                    echo 'Build successful!'
                    archiveArtifacts artifacts: "${ARTIFACT_NAME}", followSymlinks: false
                }
                failure {
                    echo 'Build failed!'
                    error 'Pipeline failed due to build errors'
                }
            }
        }

        stage('Deploy to Test Server') {
            steps {
                sh 'echo "Deploying to test server..."'
                sh "scp ${ARTIFACT_NAME} user@${DEPLOY_TEST_SERVER}:/opt/tomcat/webapps/"
                sh "ssh user@${DEPLOY_TEST_SERVER} 'stopTomcat'"
                sh "startTomcat"
            }
            post {
                success {
                    echo 'Deployment to test server successful!'
                }
                failure {
                    echo 'Deployment to test server failed!'
                    error 'Pipeline failed due to deployment errors'
                }
            }
        }

        stage('Approve Production Deployment') {
            steps {
                input message: 'Deploy to production?', ok: 'Deploy'
            }
        }

        stage('Deploy to Production Server') {
            steps {
                sh 'echo "Deploying to production server..."'
                sh "scp ${ARTIFACT_NAME} user@${DEPLOY_PROD_SERVER}:/opt/tomcat/webapps/"
                sh "ssh user@${DEPLOY_PROD_SERVER} 'stopTomcat'"
                sh "startTomcat"
            }
            post {
                success {
                    echo 'Deployment to production server successful!'
                }
                failure {
                    echo 'Deployment to production server failed!'
                    error 'Pipeline failed due to deployment errors'
                }
            }
        }
    }

    post {
        always {
            sh 'echo "Cleaning up..."'
            sh "rm -rf ${ARTIFACT_NAME}"
        }
    }
}
